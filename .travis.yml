language: python
addons:
  apt:
    # update: true
    packages:
      - cmake
      - build-essential
      - python3
      - python3-pip
  homebrew:
    # update: true
    packages:
      - cmake
      - llvm
      - python

env:
  global:
    - CIBW_SKIP="cp27-* pp27-*"
    - CIBW_MANYLINUX_X86_64_IMAGE=manylinux2014      
    - CIBW_MANYLINUX_I686_IMAGE=manylinux2014
    - CIBW_BEFORE_BUILD_LINUX="bash scripts/cibuildwheel_before_build.sh"

jobs:
  include:
  - os: linux
    python: 3.7
    env: DO_DEPLOY=0
    name: "Linux Python 3.7"
  - os: linux
    python: 3.8
    name: "Linux Python 3.8"
    env: DO_DEPLOY=1
  - os: osx
    language: generic
    name: "Mac OS Python Homebrew"
    env: CXX=/usr/bin/clang++ CXXFLAGS=-I/usr/local/include DO_DEPLOY=1
  - os: windows
    name: "Windows Python 3.8"
    language: shell
    before_install:
        - choco install python3 --version 3.8.3
        - ln -s /c/Python38/python.exe /c/Python38/python3.exe
        - python3 -m pip install --upgrade pip
    # env: PATH="/c/Python38:/c/Python38/Scripts:/c/Program\\ Files/git/usr/bin/:$PATH" WIN_DEPLOY=1
    env: PATH=/c/Python38:/c/Python38/Scripts:$PATH WIN_DEPLOY=1

# ==============================================================================
# Installation and testing

install:
  - python3 -m pip install -U numpy pytest pybind11
  - python3 -m pip freeze

before_script:
  - "echo 'backend: Agg' > matplotlibrc"

script:
  - cat matplotlibrc
  - python3 setup.py build_ext --inplace
  - python3 -m pytest -v

# ==============================================================================
# Deployment (Linux and Mac OS)

before_deploy:
  - git clean -Xdf
  - python3 -m pip install -U wheel cibuildwheel twine

deploy:
  - provider: script
    script: $TRAVIS_BUILD_DIR/scripts/deploy.sh dist/ --skip-existing
    edge: true # opt in to dpl v2
    on:
      branch: master
      condition: $DO_DEPLOY -eq 1 && -z $WIN_DEPLOY

# ------------------------------------------------------------------------------
# Special case for Windows
# NB: cannot use deploy: because ruby uses bash from MinGW instead of git-bash
#     to execute the script and escaping the spaces does not work

after_success:
  - |
    if [[ -n $WIN_DEPLOY ]]; then
      python3 -m pip install -U wheel cibuildwheel twine
      python3 setup.py sdist
      python3 -m cibuildwheel --output-dir dist/
      python3 -m pip install twine
      python3 -m twine check dist/*
      python3 -m twine upload --skip-existing dist/*
    fi

# ==============================================================================
